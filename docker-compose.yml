services:
  hdd:
    build:
      context: .
      dockerfile: hdd/Dockerfile
    image: hdd:babah
    container_name: hdd-monitor
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/Data/Backup:/mnt/Data/Backup
      - /mnt/Data/Syslog:/mnt/Data/Syslog
    environment:
      BACKUP_DIR: "/mnt/Data/Backup"
    network_mode: "host"  # Mode host digunakan

  syslog:
    build:
      context: ./syslog
      dockerfile: Dockerfile
    image: syslog-ng:babah
    container_name: syslog-ng
    restart: always
    hostname: ${SYSLOG_HOSTNAME:-syslog-ng}
    cap_add:
      - CAP_NET_BIND_SERVICE
    command: ["syslog-ng", "--foreground", "-f", "/app/syslog/config/syslog-ng.conf", "--persist-file=/app/syslog/var-run/syslog-ng.persist"]
    volumes:
      - syslog-data:/app/syslog
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/Data/Syslog:/mnt/Data/Syslog
      - ./config/log_messages.json:/app/syslog/config/log_messages.json:ro
    network_mode: "host"  # Mode host digunakan

  logrotate:
    build:
      context: ./syslog
      dockerfile: Dockerfile
    image: logrotate:babah
    container_name: logrotate
    volumes:
      - syslog-data:/app/syslog
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/Data/Syslog/default/logrotate:/mnt/Data/Syslog/default/logrotate
      - /mnt/Data/Syslog/var-run:/mnt/Data/Syslog/var-run
      - ./config/log_messages.json:/app/syslog/config/log_messages.json:ro
    depends_on:
      - syslog
    restart: "no"
    network_mode: "host"  # Mode host digunakan

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: docker-socket-proxy
    privileged: true
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CONTAINERS: 1
      LOGS: 1
    network_mode: "host"  # Mode host digunakan

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    image: api:babah
    container_name: api-monitor
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/Data/Backup:/mnt/Data/Backup
      - /mnt/Data/Syslog:/mnt/Data/Syslog
      - ./api/data:/app/data
    environment:
      LOG_DIR: "/app/data"
    network_mode: "host"  # Mode host digunakan

  stream:
    build:
      context: .
      dockerfile: streamserver/Dockerfile
    image: streamserver:babah
    container_name: stream-server
    volumes:
      - stream-data:/app/streamserver
      - ./streamserver/config/nginx.conf:/etc/nginx/nginx.conf
      - /mnt/Data/Syslog/stream:/var/log/nginx
      - ./config/log_messages.json:/app/config/log_messages.json:ro
      - ./config/credentials.sh:/app/config/credentials.sh:ro
    working_dir: /app/streamserver
    network_mode: "host"  # Mode host digunakan

volumes:
  stream-data:
    name: data-stream
  syslog-data:
    name: data-syslog