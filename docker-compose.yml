services:
  # =========================================================
  # Syslog (syslog-ng)
  # =========================================================
  syslog:
    build:
      context: .
      dockerfile: ./syslog/Dockerfile
    image: syslog
    container_name: syslog
    hostname: syslog-ng
    restart: unless-stopped
    ports:
      - "1514:1514/tcp"
      - "1514:1514/udp"
    volumes:
      # Folder
      - /mnt/Data/Syslog:/mnt/Data/Syslog
      # Sistem Timezone
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # Mount Bind Log Messages
      - ./config/log_messages.json:/app/config/log_messages.json
    environment:
      - SYSLOG_SERVER=syslog-ng
      - SYSLOG_PORT=1514
      - CLEAN_ON_STARTUP=true
      - ENABLE_SYSLOG=true
    healthcheck:
      test: ["CMD", "pgrep", "syslog-ng"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      babahdigital:

  # =========================================================
  # Resource Monitor
  # =========================================================
  monitor:
    build: 
      context: .
      dockerfile: ./resource/Dockerfile
    image: monitor
    container_name: monitor
    environment:
      - LOG_PATH=/mnt/Data/Syslog/resource/resource_monitor.log
      - MONITOR_STATE_FILE=/mnt/Data/Syslog/resource/resource_monitor_state.json
      - RESOURCE_MONITOR_INTERVAL=5
    volumes:
      # File Json Monitor
      - /mnt/Data/Syslog:/mnt/Data/Syslog
      # Folder scripts (Python, dsb.)
      - ./scripts/utils.py:/app/scripts/utils.py
      # Mount Bind Log Messages
      - ./config/log_messages.json:/app/config/log_messages.json
      # Sistem Timezone
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped
    depends_on:
      - syslog
    networks:
      babahdigital:
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "find /mnt/Data/Syslog/resource/resource_monitor_state.json -mmin -1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # =========================================================
  # Stream Server (Nginx-RTMP) 
  # =========================================================
  stream:
    build:
      context: .
      dockerfile: ./streamserver/Dockerfile
    image: stream-server
    container_name: stream-server
    networks:
      babahdigital:
    ports:
      # HLS Services
      - "80:8080"
    volumes:
      # File Json Monitor
      - /mnt/Data/Syslog/resource/resource_monitor_state.json:/mnt/Data/Syslog/resource/resource_monitor_state.json
      # Folder scripts (Python, dsb.)
      - ./scripts/utils.py:/app/scripts/utils.py
      # File konfigurasi log messages
      - ./config/log_messages.json:/app/config/log_messages.json
      # Bind Syslog Truenas
      - /mnt/Data/Syslog:/mnt/Data/Syslog
      # Bind-mount Data Sistem
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    env_file:
      - .env

  # =========================================================
  # HDD Monitor (misalnya memantau /mnt/Data/Backup dsb.)
  # =========================================================
  hdd:
    build:
      context: ./hdd
      dockerfile: Dockerfile
    image: hdd-monitor
    container_name: hdd-monitor
    restart: always
    volumes:
      - /mnt/Data/Syslog:/mnt/Data/Syslog
      - /mnt/Data/Backup:/mnt/Data/Backup
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      BACKUP_DIR: "/mnt/Data/Backup"
    networks:
      babahdigital:

  # =========================================================
  # API Monitor (contoh)
  # =========================================================
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: api-monitor
    container_name: api-monitor
    restart: always
    volumes:
      - /mnt/Data/Backup:/mnt/Data/Backup
      - ./api/data:/app/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      LOG_DIR: "/app/data"
    networks:
      babahdigital:

  # =========================================================
  # Docker Socket Proxy (opsional)
  # =========================================================
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: babah-docker-socket-proxy
    privileged: true
    restart: unless-stopped
    networks:
      babahdigital:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CONTAINERS: 1
      LOGS: 1

networks:
  babahdigital:
    name: babah-network
    driver: bridge