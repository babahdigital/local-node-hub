services:
  # =========================================================
  # Syslog (syslog-ng)
  # =========================================================
  syslog:
    build: 
      context: .
      dockerfile: ./syslog/Dockerfile
    image: syslog-ng
    container_name: syslog-ng
    hostname: ${SYSLOG_HOSTNAME:-syslog-ng}
    restart: unless-stopped
    command: ["syslog-ng", "--foreground", "-f", "/app/syslog/config/syslog-ng.conf", "--persist-file=/app/syslog/var-run/syslog-ng.persist"]
    ports:
      - "1514:1514/tcp"
      - "1514:1514/udp"
    entrypoint: ["/app/syslog/entrypoint.sh"]
    volumes:
      - syslog-data:/mnt/Data/Syslog
      - logrotate-data:/app/syslog/logrotate
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      LOG_MESSAGES_FILE: "/app/config/log_messages.json"
    networks:
      babahdigital:
    healthcheck:
      test: ["CMD", "pgrep", "syslog-ng"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =========================================================
  # Logrotate
  # =========================================================
  logrotate:
    build:
      context: .
      dockerfile: ./syslog/Dockerfile
    image: logrotate
    container_name: logrotate
    depends_on:
      - syslog
    restart: on-failure
    entrypoint: ["/app/syslog/entrypoint-logrotate.sh"]
    environment:
      LOG_MESSAGES_FILE: "/app/config/log_messages.json"
    volumes:
      - syslog-data:/mnt/Data/Syslog
      - logrotate-data:/app/syslog/logrotate
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      babahdigital:
    healthcheck:
      test: ["CMD", "pgrep", "syslog-ng"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =========================================================
  # Stream Server (Nginx-RTMP) 
  # =========================================================
  stream:
    build:
      context: .
      dockerfile: ./streamserver/Dockerfile
    image: stream-server
    container_name: stream-server
    networks:
      babahdigital:
    ports:
      # HLS Services
      - "80:8080"
    volumes:
      # Folder scripts (Python, dsb.)
      - ./scripts:/app/scripts
      # File konfigurasi log messages
      - ./config:/app/config
      # File hls
      - hls-data:/app/hls
      # Bind Syslog Truenas
      - syslog-data:/mnt/Data/Syslog
      # Bind-mount Data Sistem
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - syslog
    env_file:
      - .env

  # =========================================================
  # HDD Monitor (misalnya memantau /mnt/Data/Backup dsb.)
  # =========================================================
  hdd:
    build:
      context: ./hdd
      dockerfile: Dockerfile
    image: hdd-monitor
    container_name: hdd-monitor
    restart: always
    volumes:
      - syslog-data:/mnt/Data/Syslog
      - /mnt/Data/Backup:/mnt/Data/Backup
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      BACKUP_DIR: "/mnt/Data/Backup"
    networks:
      babahdigital:

  # =========================================================
  # API Monitor (contoh)
  # =========================================================
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: api-monitor
    container_name: api-monitor
    restart: always
    volumes:
      - /mnt/Data/Backup:/mnt/Data/Backup
      #- syslog-data:/mnt/Data/Syslog
      - ./api/data:/app/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      LOG_DIR: "/app/data"
    networks:
      babahdigital:

  # =========================================================
  # Docker Socket Proxy (opsional)
  # =========================================================
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: babah-docker-socket-proxy
    privileged: true
    restart: unless-stopped
    networks:
      babahdigital:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CONTAINERS: 1
      LOGS: 1

networks:
  babahdigital:
    name: babah-network
    driver: bridge

volumes:
  syslog-data:
    driver: local
    name: syslog-data
    driver_opts:
      type: none
      o: bind
      device: /mnt/Data/Syslog
  backup-data:
    driver: local
    name: backup-data
    driver_opts:
      type: none
      o: bind
      device: /mnt/Data/Backup
  logrotate-data:
    driver: local
    name: logrotate-data
  hls-data:
    driver: local
    name: hls-data